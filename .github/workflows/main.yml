name: Node.js CI

on:
#  workflow_dispatch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
permissions:
  contents: write
  pages: write
  id-token: write
  packages: write

concurrency:
  group: github-pages
  cancel-in-progress: false

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [21.x]
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: install deps
      run: npm ci
#    - name: eslint check
#      run: npm run lint
    - name: run test
      run: npm run test
  
  build: 
    name: build
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [21.x]
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: install deps
      run: npm ci
    - name: build
      run: npm run build --if-present
    - name: Upload Artifacts
      uses: actions/upload-pages-artifact@v3
      with:
        name: github-pages
        path: dist
  
  deploy:
    name: deploy
    needs: [test, build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [21.x]
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }} # wird automatisch generiert
    - name: Build and push
      uses: docker/build-push-action@v5
      with: 
        context: "{{defaultContext}}"
        push: true
        tags: ghcr.io/ci-cd-2024-dhbw-hdh/marco.peteler/klausur:latest
